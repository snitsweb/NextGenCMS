# docker-compose.yml
version: "3.8"

networks:
  app_network:
    driver: bridge
  db_network:
    driver: bridge

services:
  proxy:
    image: nginx
    volumes:
      - ./proxy/services/:/etc/nginx/services
      - ./proxy/nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
    ports:
      - "80:8080"
    depends_on:
      - admin
      - front
      - back

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front/:/code/front
      - ./front/node_modules/:/code/front/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_network

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    volumes:
      - ./admin/:/code/admin
      - ./admin/node_modules/:/code/admin/node_modules
    links:
      - "back:back"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_network

  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back/:/code/back
    networks:
      - db_network
      - app_network

  db:
    image: mysql:8.0.32-debian
    restart: always
    environment:
      MYSQL_DATABASE: 'backend_snitsweb'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'backend'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - db_network